# We need to declare variabels to use in the range loop
  # Default .Values references won't work
  {{- $name := include "cronjobs.name" .  -}}
  {{- $fullName := include "cronjobs.fullname" . -}}
  {{- $chartName := include "cronjobs.chart" . -}}
  {{- $releaseName := .Release.Name  -}}
  {{- $releaseService := .Release.Service -}}
  {{- $releaseNamespace := .Release.Namespace -}}
  {{- $secretKeyRefEnv := .Values.secretKeyRefEnv  -}}
  {{- $extraEnv := .Values.extraEnv  -}}
  {{- $scheduleOffset := .Values.scheduleOffset -}}
  {{- $successfulJobsHistoryLimit := .Values.successfulJobsHistoryLimit  -}}
  {{- $failedJobsHistoryLimit := .Values.failedJobsHistoryLimit  -}}
  {{- $image := .Values.image  -}}

  {{- $settingsEnabled := .Values.settings.enabled }}
  {{- $settingsName := .Values.settings.name }}
  {{- $settingsPath := .Values.settings.path }}
  {{- $settingsSubPath := .Values.settings.subPath }}

  {{- $volumeEnabled := .Values.persistentVolume.enabled }}
  {{- $volumeName := .Values.persistentVolume.name }}
  {{- $volumePath := .Values.persistentVolume.path }}

{{- range (required "Provide a values-file. E.g. `helm ... -f values.yaml -f values/triggers.yaml`" .Values.triggers) }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ $name }}-{{ .name | lower | trunc 52 }}
  namespace: {{ $releaseNamespace | quote }}
  labels:
    app: {{ $name }}
    chart: {{ $chartName }}
    release: {{ $releaseName }}
    heritage: {{ $releaseService }}
    scheduleOffset: {{ $scheduleOffset }}
spec:
  successfulJobsHistoryLimit: {{ $successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ $failedJobsHistoryLimit }}
  schedule: {{ .schedule }}
  {{- if .startingDeadlineSeconds }}
  startingDeadlineSeconds: {{ .startingDeadlineSeconds }}
  {{- end }}
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: {{ $name }}-{{ .name | lower }}
            image: {{ $image }}
            imagePullPolicy: Always
            command: ["{{ .command }}"]
            {{- if or $secretKeyRefEnv $extraEnv}}
            env:
              {{- if $extraEnv}}
              {{- range $key, $value := $extraEnv }}
              - name: {{ $key }}
                value: {{ $value | quote }}
              {{- end }}
              {{- end }}
              {{- if $secretKeyRefEnv}}
              {{- range $secretKeyRefEnvKey, $secretKeyRefEnvValue := $secretKeyRefEnv }}
              {{- range $secretName, $secretValue := $secretKeyRefEnvValue }}
              {{- range $key, $value := $secretValue }}
              - name: {{ $value }}
                valueFrom:
                  secretKeyRef:
                    name: {{ $secretKeyRefEnvKey}}
                    key: {{ $key }}
              {{- end }}
              {{- end }}
              {{- end }}
              {{- end }}
            {{- end }}
            {{- if or $settingsEnabled $volumeEnabled }}
            volumeMounts:
              {{- if $settingsEnabled }}
              - name: {{ $settingsName }}
                mountPath: {{ $settingsPath }}
                subPath: {{ $settingsSubPath }}
              {{- end }}
              {{- if $volumeEnabled }}
              - name: {{ $volumeName }}
                mountPath: {{ $volumePath }}
              {{- end }}
            {{- end }}
          restartPolicy: Never
          {{- if or $settingsEnabled $volumeEnabled }}
          volumes:
            - name: {{ $settingsName }}
              configMap:
                name: {{ $fullName }}
            {{- if $volumeEnabled }}
            - name: {{ $volumeName }}
              persistentVolumeClaim:
                claimName: {{ $volumeName }}
            {{- end }}
          {{- end }}
{{- end }}