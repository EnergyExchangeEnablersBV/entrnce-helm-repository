# Default values for discovery-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker-private/entrnce-website
  tag: latest
  pullPolicy: Always
imageCredentials:
  name: private-docker-registry

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  # name: ~

rbac:
  create: true

podAnnotations: { }
#  prometheus.io/scrape: "true"
#  prometheus.io/path: "/actuator/prometheus"

statefullSet:
  enabled: false
  name: transaction-logs
  path: /app/transaction-logs
  storage: 1Gi


## The list of ports that your app listens on
containerPort: 8080

hazelcast:
  enabled: false
  port: 5701

# default gitops profile to create appllication-gitops.yaml
profile: gitops

cluster:
  name: ""

extraEnv: {}
  ## Extra environment variables to be injected
  # DATABASE_ENGINE: mysql
  # DATABASE_HOST: mysql
  # DATABASE_NAME: spring
  # DATABASE_USERNAME: spring
  # DATABASE_PASSWORD: spring

secretKeyRefEnv: {}
#  secretname:
#    - mysql-password: MYSQL_PASSWORD

securityContext: {}
#   runAsUser: 1000
#   fsGroup: 1000

spring:
  config:
    type: file
    content: |-
      ---
      logging:
        level:
          root: WARN
livenessProbe:
  httpGet:
    path: /appinfo/health
    port: 8080
    scheme: HTTP
  initialDelaySeconds: 90
  timeoutSeconds: 5
readinessProbe:
  httpGet:
    path: /appinfo/health
    port: 8080
  initialDelaySeconds: 90
  timeoutSeconds: 5
resources:
  limits:
    cpu: 4
    memory: 8192Mi
  requests:
    cpu: 400m
    memory: 512Mi

nodeSelector: {}

tolerations: {}

affinity: {}

service:
  enabled: true
  httpPort: 80
  ## If service.type is not set to NodePort, the following statement
  ## will be ignored.
  ##
  # nodePort: 32015

  ## Service type can be set to ClusterIP, NodePort or LoadBalancer.
  ##
  type: ClusterIP

  ## Service annotations
  ##
  # annotations:
  #   service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
  #   service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:xx-xxxx-x:xxxxxxxxxxx:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx
  #   external-dns.alpha.kubernetes.io/hostname: drone.domain.tld.

ingress:
  ## If true, Ingress will be created.
  ##
  enabled: false

  ## Ingress annotations
  ##
  # annotations:
  #   kubernetes.io/ingress.class: gce
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: 'true'

  ## hostnames must be provided if Ingress is enabled
  ##
  # hosts:
  #   - spring.example.io

  ## Ingress TLS configuration secrets
  ## Must be manually created in the namespace
  ##
  # tls:
  #   - secretName: spring-tls
  #     hosts:
  #       - spring.example.io

podDisruptionBudget:
  enabled: false
  minAvailable: 1

debugMode: false

keel:
  # keel policy (all/major/minor/patch/force)
  policy: force
  # trigger type, defaults to events such as pubsub, webhooks
  trigger: poll
  # polling schedule
  pollSchedule: "@every 1m"
  # approvals required to proceed with an update
  approvals: 1
  # only makes a difference when used with 'force' policy, will only update if tag matches :dev->:dev, :prod->:prod
  match-tag: true
